; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
upload_speed = 460800
monitor_speed = 115200
platform = espressif32@6.6.0
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	; -D ENABLE_SIMULATION=1
	-D BAUD=${common_env_data.monitor_speed}
	-D CFG_APPVER="\"0.1.8\""
	; -D CFG_GITREV=\""dev\""
	!python script/git_rev.py 
lib_deps =
	https://github.com/mp-se/Arduino-Log#1.1.2
	https://github.com/mp-se/ArduinoJson#v6.21.3
	https://github.com/mp-se/arduino-mqtt#v2.5.1
	https://github.com/mp-se/ESPAsyncWebServer#0.1.1
	https://github.com/mp-se/ESPAsyncTCP#0.1.0
	https://github.com/mp-se/NimBLE-Arduino#1.4.1
	https://github.com/mp-se/espframework#1.0.6
extra_scripts = 
	script/copy_firmware.py
html_files = 
	html/index.html
	html/app.js.gz
	html/app.css.gz
	html/favicon.ico.gz

[env:victron-s3-waveshare]
; Wavewhare esp32s3 with 2.8" TFT
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D ESP32S3
	-D ARDUINO_USB_CDC_ON_BOOT
	-D ENABLE_TFT
	-D WAVESHARE_TFT
lib_deps = 
	${common_env_data.lib_deps}
board = lolin_s3_pro
build_type = release
board_build.filesystem = littlefs
board_build.partitions = part32.csv
monitor_filters = esp32_exception_decoder
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:victron-lolin]
; Lolin ESP32 PRO with Lolin TFT
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D ESP32
	-D LCD_TFT=1
	-D USER_SETUP_LOADED=1
	-D ILI9341_DRIVER=1
	-D TFT_WIDTH=240
	-D TFT_HEIGHT=320
	-D CGRAM_OFFSET=1
	-D TFT_BL=32
	-D SMOOTH_FONT=1
	-D TFT_BACKLIGHT_ON=1
	-D LOAD_GFXFF=1
	-D TOUCH_CS=12	
	-D ENABLE_TFT
lib_deps = 
	${common_env_data.lib_deps}
	https://github.com/Bodmer/TFT_eSPI#V2.5.43
board = lolin_d32_pro
build_src_filter = +<*> -<../lib/*> 
build_type = release
board_build.filesystem = littlefs
board_build.partitions = part32.csv
monitor_filters = esp32_exception_decoder
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:victron-s3-lolin]
; Lolin ESP32s3 PRO with Lolin TFT
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=4
	-D ESP32S3
	-D ARDUINO_USB_CDC_ON_BOOT
	-D ENABLE_TFT
	-D LOLIN_TFT
lib_deps = 
	${common_env_data.lib_deps}
board = lolin_s3_pro
build_type = release
board_build.filesystem = littlefs
board_build.partitions = part32.csv
monitor_filters = esp32_exception_decoder
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:victron-unit]
; esp32 with wokwi for testing
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32
	-D LOLIN_TFT
	-D ENABLE_SIMULATION=1
	-D ENABLE_UNIT_TEST=1
lib_deps = 
	${common_env_data.lib_deps}
	https://github.com/bxparks/AUnit#v1.7.1
	https://github.com/Bodmer/TFT_eSPI#V2.5.43
	DNSServer
board = lolin_d32_pro
build_type = release
build_src_filter = +<*> -<main.cpp> -<../lib/*> +<../test/tests*.cpp>
board_build.filesystem = littlefs
board_build.partitions = part32.csv
monitor_filters = esp32_exception_decoder
board_build.embed_txtfiles = ${common_env_data.html_files}
